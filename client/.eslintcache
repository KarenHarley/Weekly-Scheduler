[{"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js":"1","/Users/karenvillagomez/Weekly-Shedular/client/src/App.js":"2","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js":"3","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js":"4","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js":"5","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js":"6","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js":"7","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js":"8","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js":"9","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js":"10","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js":"11","/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js":"12","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js":"13","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js":"14","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Footer/index.js":"15","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/utils.js":"16","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task/index.js":"17","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditStep.js":"18","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneStep.js":"19"},{"size":219,"mtime":1654289958063,"results":"20","hashOfConfig":"21"},{"size":3313,"mtime":1660948699670,"results":"22","hashOfConfig":"21"},{"size":2124,"mtime":1658694299460,"results":"23","hashOfConfig":"21"},{"size":3878,"mtime":1664208441236,"results":"24","hashOfConfig":"21"},{"size":2053,"mtime":1661994783528,"results":"25","hashOfConfig":"21"},{"size":4555,"mtime":1664208549908,"results":"26","hashOfConfig":"21"},{"size":5369,"mtime":1664208596630,"results":"27","hashOfConfig":"21"},{"size":3448,"mtime":1663185149964,"results":"28","hashOfConfig":"21"},{"size":1086,"mtime":1656960332241,"results":"29","hashOfConfig":"21"},{"size":2484,"mtime":1658698342509,"results":"30","hashOfConfig":"21"},{"size":2770,"mtime":1663187970652,"results":"31","hashOfConfig":"21"},{"size":7381,"mtime":1667248790833,"results":"32","hashOfConfig":"21"},{"size":3570,"mtime":1667248886264,"results":"33","hashOfConfig":"21"},{"size":3374,"mtime":1664576146295,"results":"34","hashOfConfig":"21"},{"size":4061,"mtime":1660699178866,"results":"35","hashOfConfig":"21"},{"size":6981,"mtime":1664397953904,"results":"36","hashOfConfig":"21"},{"size":3336,"mtime":1667339871258,"results":"37","hashOfConfig":"21"},{"size":5377,"mtime":1664208599733,"results":"38","hashOfConfig":"21"},{"size":2325,"mtime":1664208569214,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"b5snaa",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js",[],["89","90"],"/Users/karenvillagomez/Weekly-Shedular/client/src/App.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js",["91","92","93"],"import { Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nconst Homepage = () => {\n  return (\n    <div className=\"homepage-wrapper\">\n      <div className=\"homepage-heading\">\n        <h1>Welcome to Weekly Shedular</h1>\n      </div>\n      <div className=\"banner-container\">\n        <div className=\"banner\">\n          <img src=\"./Pics/banner.jpg\"></img>\n        </div>\n        <div className=\"banner stack-top\"></div>\n      </div>\n      <div className=\"organize\">\n        <h4>Organize</h4>\n        <p>\n          {\" \"}\n          Weekly Shedular helps you prioritize what matters, and helps you\n          allocate your precious time accordingly. People spend an extraordinary\n          amount of time due to lack of organization. Organizing your daily\n          schedule can significantly increase productivity and allow you to get\n          more things done throughout the day. Simply put organization equals\n          productivity!{\" \"}\n        </p>\n      </div>\n      <div className=\"schedule\">\n        <h4>Schedule</h4>\n        <p>\n          {\" \"}\n          Scheduling which is an aspect of organization takes things up a notch.\n          It helps you get clear on what your purpose and objectives are. Rather\n          than just spinning wheels, having a good schedule ensures that all our\n          goals are identified and will be tackled. Scheduling also fights\n          against for crastination by having a specific time frame to complete a\n          task.{\" \"}\n        </p>\n      </div>\n      <div className=\"plan\">\n        <h4>Strategize</h4>\n        <p>\n          {\" \"}\n          Throughout history, strategy has been a key element in the success of\n          major battles. Today, a strategic mindset can help us to plan in a way\n          in which we can foresee the future and prepare accordingly with sense\n          of direction. Nevertheless, itâ€™s important to remember that any good\n          strategy needs to be put on a roadmap. This is exactly how strategy is\n          linked to scheduling and organization.{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js",["94","95","96"],"import { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASKS } from \"../utils/queries\";\nimport { REMOVE_ALL_TASKS } from \"../utils/mutations\";\nimport { Link } from \"react-router-dom\";\nimport Task from \"../components/Task\";\nimport Auth from \"../utils/auth\";\nimport { useState, useEffect } from \"react\";\nimport CreateForm from \"../components/CreateForm\";\nimport { days } from \"../utils/utils\";\nconst Tasks = () => {\n  const [day, setDay] = useState(\"Monday\");\n  const [showForm, setShowForm] = useState(false);\n  const [deleteAll, { error, DeleteData }] = useMutation(REMOVE_ALL_TASKS, {\n    refetchQueries: [\n      {\n        query: QUERY_TASKS,\n        variables: { selectedDay: day },\n      },\n    ],\n  });\n  const { loading, data } = useQuery(QUERY_TASKS, {\n    variables: {\n      selectedDay: day,\n    },\n  });\n\n  const tasks = data?.tasks || [];\n  const selectDay = (e) => {\n    if (e.target.type === \"li\") {\n      console.log(e.target.id);\n      setDay(e.target.id);\n    }\n  };\n  const changeShowForm = () => {\n    setShowForm((prev) => !prev);\n  };\n  const deleteAllTasks = async () => {\n    try {\n      const { data } = await deleteAll({\n        variables: { selectedDay: day },\n      });\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return (\n    <div className=\"tasks-wrapper\">\n      <div className=\"select-day-div\">\n        <ul onClick={selectDay}>\n          <li className=\"nav-link pre-new-section \">\n            <button\n              onClick={() => {\n                const confirmBox = window.confirm(\n                  `Do you really want to delete ALL the ${day} tasks?`\n                );\n                if (confirmBox === true) {\n                  deleteAllTasks();\n                }\n              }}\n              id=\"delete\"\n              style={{ textDecoration: \"none\" }}\n              className=\"nav-button\"\n            >\n              Delete All\n            </button>\n          </li>\n          {days.map((loopingDay, i) => {\n            return (\n              <li\n                type=\"li\"\n                id={loopingDay}\n                key={loopingDay}\n                className={day === loopingDay ? \"selected-day\" : \"nav-link\"}\n              >\n                {loopingDay}\n              </li>\n            );\n          })}\n          <li className=\"nav-link new-section\">\n            <button\n              onClick={changeShowForm}\n              id=\"create\"\n              style={{ textDecoration: \"none\" }}\n              className=\"nav-button\"\n            >\n              {!showForm ? \"Create Task\" : \"Hide Create Form\"}\n            </button>\n          </li>\n        </ul>\n      </div>\n      {Auth.loggedIn() ? (\n        <div className=\"all-tasks-wrapper\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              {tasks.length >= 1 ? (\n                <div className=\"all-tasks\">\n                  {tasks.map((task, i) => {\n                    return <Task data={task} key={i} day={day} />;\n                  })}\n                </div>\n              ) : (\n                <p className=\"no-tasks\">No Tasks</p>\n              )}\n            </>\n          )}\n          {showForm ? (\n            <div className=\"create-form-div\">\n              <CreateForm setDay={setDay} day={day} />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      ) : (\n        <div className=\"login-please\">\n          <span>\n            You need to be logged in to see your Tasks. Please&nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tasks;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js",["97","98","99","100"],"import { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASK, QUERY_STEPS } from \"../utils/queries\";\nimport { REMOVE_TASK } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { formatTime } from \"../utils/utils\";\nimport CreateForm from \"../components/CreateForm\";\nimport Auth from \"../utils/auth\";\nimport Task from \"../components/Task\";\n\nconst OneTask = () => {\n  const params = useParams();\n  console.log(params.id);\n  const [addSteps, setaddSteps] = useState(false);\n  const [deleteTask, { errorTask }] = useMutation(REMOVE_TASK);\n\n  const { loading, data } = useQuery(QUERY_TASK, {\n    variables: {\n      taskId: params.id,\n    },\n  });\n\n  const changeAddStep = () => {\n    setaddSteps((prev) => !prev);\n  };\n\n  const deleteOneTask = async () => {\n    try {\n      const taskData = await deleteTask({\n        variables: {\n          taskId: params.id,\n        },\n      });\n      window.location.replace(\"/tasks\");\n      //create mutation in all tasks (see notes)\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log(data);\n\n  return (\n    <div className=\"one-task-wrapper\">\n      {Auth.loggedIn() ? (\n        <div className=\"steps-and-task-container\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              <div className=\"one-task-and-create-form\">\n                <div\n                  className={\n                    data.task.quadrant\n                      ? `${data.task.quadrant} one-task`\n                      : \"one-task\"\n                  }\n                >\n                  <p>\n                    {data.task.quadrant ? (\n                      <span>{data.task.quadrant}</span>\n                    ) : (\n                      <></>\n                    )}\n                    {formatTime(data.task.startingTime)}-\n                    {formatTime(data.task.endingTime)}\n                  </p>\n                  <p className=\"name-heading\">\n                    {data.task.name}{\" \"}\n                    <button\n                      id=\"button-show-form\"\n                      onClick={() => {\n                        const confirmBox = window.confirm(\n                          \"Do you really want to delete this task?\"\n                        );\n                        if (confirmBox === true) {\n                          deleteOneTask();\n                        }\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </p>\n\n                  {data.task.notes ? (\n                    <div className=\"notes-div\">\n                      <h4>Notes:</h4>\n                      <p>{data.task.notes}</p>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n\n                  <div className=\"edit-or-show-form-div\">\n                    <button id=\"button-show-form\" onClick={changeAddStep}>\n                      {!addSteps ? \"Add Mini-Tasks\" : \"Hide Create Form\"}\n                    </button>\n                    <Link to={`/task/edit/${data.task._id}`}>Edit</Link>\n                  </div>\n                </div>\n                {addSteps ? (\n                  <div className=\"create-step-form one-task-form\">\n                    <CreateForm\n                      taskStartingTime={data.task.startingTime}\n                      taskEndingTime={data.task.endingTime}\n                    />\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              {data.task.steps != 0 ? (\n                <div className=\"step-container\">\n                  <h4>Mini-Tasks to Accomplish this larger task</h4>\n                  {data.task.steps.map((loopingStep, i) => {\n                    return <Task data={loopingStep} key={i} />;\n                  })}\n                </div>\n              ) : (\n                <></>\n              )}\n            </>\n          )}\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to see this Task. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default OneTask;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js",["101"],"import { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASK } from \"../utils/queries\";\nimport { UPDATE_TASK } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  times,\n  createOptions,\n  createQuadrantOptions,\n  quadrants,\n} from \"../utils/utils\";\n\nimport Auth from \"../utils/auth\";\n\nconst EditTask = () => {\n  const params = useParams();\n\n  const { loading, data } = useQuery(QUERY_TASK, {\n    variables: {\n      taskId: params.id,\n    },\n  });\n  console.log(data);\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n    quadrant: \"\",\n  });\n\n  const [updateTask, { error, updateData }] = useMutation(UPDATE_TASK);\n\n  const onChange = (e) => {\n    console.log(e.target);\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (\n      formState.name === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    console.log(formState);\n\n    try {\n      const { updateData } = await updateTask({\n        variables: { ...formState, _id: data.task._id },\n      });\n      console.log(updateData);\n      window.location.replace(`/task/${data.task._id}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        name: data.task.name,\n        notes: data.task.notes,\n        startingTime: data.task.startingTime,\n        endingTime: data.task.endingTime,\n        quadrant: data.task.quadrant,\n      });\n    }\n  }, [data, updateData]);\n\n  return (\n    <div className=\"create-task-wrapper edit-task-container\">\n      {Auth.loggedIn() ? (\n        <div className=\"edit-task-wrapper\">\n          {loading ? (\n         <div className=\"loading-div\">\n         <img\n           className=\"loading\"\n           src={\"./Pics/loading-gif.gif\"}\n           alt=\"loading...\"\n         />\n       </div>\n          ) : (\n            <>\n              <form\n                className=\"create-form edit-task-form\"\n                onSubmit={handleFormSubmit}\n              >\n                <h1>Edit task</h1>\n                <label>\n                  Select Starting Time\n                  <select\n                    id=\"start\"\n                    name=\"startingTime\"\n                    value={formState.startingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Select Ending Time\n                  <select\n                    id=\"end\"\n                    name=\"endingTime\"\n                    value={formState.endingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Name:\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={formState.name || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n\n                <label>\n                  Notes:\n                  <textarea\n                    type=\"text\"\n                    name=\"notes\"\n                    id=\"notes\"\n                    value={formState.notes || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n                <label>\n                  <select\n                    id=\"quadrant\"\n                    name=\"quadrant\"\n                    value={formState.quadrant || \"\"}\n                    onChange={onChange}\n                  >\n                    {!formState.quadrant ? (\n                      <option value={\"default\"}>Select Quadrant</option>\n                    ) : (\n                      <option value={\"\"}>Remove Quadrant</option>\n                    )}\n                    {quadrants.map((quadrant) => {\n                      return createQuadrantOptions(quadrant);\n                    })}\n                  </select>\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n                <Link to={`/task/${data.task._id}`}>Back to Task</Link>\n              </form>\n            </>\n          )}\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to edit this task. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default EditTask;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js",["102","103"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nconst Login = (props) => {\n  console.log(\"Hi\");\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n      //   window.location.replace(\"/lista_contacto\");\n      console.log(Auth.getProfile());\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <div className=\"login-form-div\">\n      <div className=\"login-banner-container\">\n        <div className=\"banner\">\n          <img src=\"./Pics/login-pic.jpg\"></img>\n        </div>\n        <div className=\"welcome-div\">\n          <h1>Welcome Back</h1>\n          <p>\n            It's great to have you here again. Let's accomplish a lot today!\n            Create the tasks and let us handle the rest, we have your back.\n          </p>\n        </div>\n        <div className=\"login-banner login-stack-top\">\n          <form className=\"login-form\">\n            <h4 className=\"login-heading\">Login</h4>\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              id=\"username-email\"\n              value={formState.email}\n              onChange={handleChange}\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              id=\"password-login\"\n              value={formState.password}\n              onChange={handleChange}\n              required\n            />\n            {error && <div className=\"error\">{error.message}</div>}\n            <input type=\"submit\" onClick={handleFormSubmit} />\n            <p>\n              <span>\n                {\" \"}\n                Don't have an account?&nbsp;<a href=\"/signup\">Sign up</a>{\" \"}\n              </span>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js",["104","105"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nconst Signup = (props) => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n  const [signup, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await signup({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      window.location.replace(\"/tasks\");\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n      username: \"\",\n    });\n  };\n  return (\n    <div className=\"signup-form-div\">\n      <div className=\"signup-banner-container login-banner-container\">\n        <div className=\"banner\">\n          <img src=\"./Pics/sign-up-pic.jpg\"></img>\n        </div>\n        <div className=\"welcome-div\">\n          <h1>Welcome</h1>\n          <p>\n            It's great to have you here. Let's accomplish a lot today! Create\n            the tasks and let us handle the rest, we have your back.\n          </p>\n        </div>\n        <div className=\"signup-banner login-banner login-stack-top\">\n          {\" \"}\n          <form className=\"signup-form\">\n            <h4 className=\"signup-heading\">Sign Up</h4>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              id=\"username-username\"\n              value={formState.username}\n              onChange={handleChange}\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              id=\"username-email\"\n              value={formState.email}\n              onChange={handleChange}\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              id=\"password-login\"\n              value={formState.password}\n              onChange={handleChange}\n              required\n            />\n            {error && <div className=\"error\">{error.message}</div>}\n            <input type=\"submit\" onClick={handleFormSubmit} />\n            <p>\n              <span>\n                Have have an account?&nbsp;<a href=\"/login\">Login</a>\n              </span>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Signup;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js",["106"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_TASK, CREATE_STEP } from \"../../utils/mutations\";\nimport {\n  times,\n  createOptions,\n  days,\n  quadrants,\n  createQuadrantOptions,\n  shortenTimesArray,\n} from \"../../utils/utils\";\nimport {\n  QUERY_TASKS,\n  QUERY_TASK,\n  QUERY_DUPLICATE_TASK,\n  QUERY_DUPLICATE_STEP,\n} from \"../../utils/queries\";\n\n/*\nIMPORTANT!!!!!!!!! FIX SALT ISSUE!!!!!!!\n*/\nconst CreateForm = ({ setDay, day, taskStartingTime, taskEndingTime }) => {\n  const location = useLocation();\n  const params = useParams();\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n    day: \"\",\n    quadrant: \"\",\n  });\n  //to only use one mutation\n  let QUERY;\n  if (location.pathname === \"/tasks\") {\n    QUERY = QUERY_DUPLICATE_TASK;\n  } else {\n    QUERY = QUERY_DUPLICATE_STEP;\n  }\n\n  const { data, refetch } = useQuery(QUERY, {\n    variables: {\n      startingTime: formState.startingTime,\n      endingTime: formState.endingTime,\n      day: formState.day,\n      task: params.id,\n    },\n  });\n\n  const [createTask, { error }] = useMutation(CREATE_TASK, {\n    refetchQueries: [\n      {\n        query: QUERY_TASKS,\n        variables: { selectedDay: day },\n      },\n    ],\n  });\n\n  const [createStep] = useMutation(CREATE_STEP, {\n    refetchQueries: [\n      {\n        query: QUERY_TASK,\n        variables: { taskId: params.id },\n      },\n    ],\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n  };\n  const createTaskInDB = async () => {\n    if (\n      formState.name === \"\" ||\n      formState.day === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Day, Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    if (!data.duplicateTask) {\n      try {\n        await createTask({\n          variables: { ...formState },\n        });\n        setDay(formState.day);\n        // clear form values\n        setFormState({\n          name: \"\",\n          notes: \"\",\n          startingTime: \"\",\n          endingTime: \"\",\n          day: \"\",\n          quadrant: \"\",\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      alert(\"This time already has a task\");\n      return;\n    }\n  };\n  const createStepInDB = async () => {\n    if (\n      formState.name === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    if (taskStartingTime > formState.startingTime) {\n      alert(\"This mini-task's starting time starts before the parent task\");\n      return;\n    }\n    if (formState.endingTime > taskEndingTime) {\n      alert(\"This mini-task ends after the parent task time\");\n      return;\n    }\n    if (!data.duplicateStep) {\n      try {\n         await createStep({\n          variables: {\n            name: formState.name,\n            notes: formState.notes,\n            task: params.id,\n            startingTime: formState.startingTime,\n            endingTime: formState.endingTime,\n            quadrant: formState.quadrant,\n          },\n        });\n        // clear form values\n        setFormState({\n          name: \"\",\n          notes: \"\",\n          startingTime: \"\",\n          endingTime: \"\",\n          day: \"\",\n          quadrant: \"\",\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      alert(\"This time already has a task\");\n    }\n  };\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (location.pathname === \"/tasks\") {\n      createTaskInDB();\n    } else {\n      createStepInDB();\n    }\n  };\n  useEffect(() => {\n    refetch();\n  }, [formState]);\n  return (\n    <div className=\"create-task-wrapper\">\n      <form className=\"create-form\">\n        <div className=\"create-task-heading\">\n          {location.pathname === \"/tasks\" ? (\n            <h4>Create Task</h4>\n          ) : (\n            <h4>Create Mini-Tasks</h4>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          id=\"task-name\"\n          value={formState.name}\n          onChange={handleChange}\n          required\n        />\n        <textarea\n          type=\"text\"\n          name=\"notes\"\n          placeholder=\"Notes (optional)\"\n          id=\"task-notes\"\n          value={formState.notes}\n          onChange={handleChange}\n          required\n        />\n        {location.pathname === \"/tasks\" ? (\n          <select\n            required\n            id=\"day\"\n            name=\"day\"\n            value={formState.day}\n            onChange={handleChange}\n          >\n            <option value={\"default\"}>Select Day</option>\n            {days.map((day) => {\n              return (\n                <option value={day} key={day}>\n                  {day}\n                </option>\n              );\n            })}\n          </select>\n        ) : (\n          <></>\n        )}\n        <select\n          id=\"start\"\n          name=\"startingTime\"\n          value={formState.startingTime}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Starting Time</option>\n          {location.pathname === \"/tasks\"\n            ? times.map((time) => {\n                return createOptions(time);\n              })\n            : shortenTimesArray(taskStartingTime, taskEndingTime, times).map(\n                (time) => {\n                  return createOptions(time);\n                }\n              )}\n        </select>\n        <select\n          id=\"end\"\n          name=\"endingTime\"\n          value={formState.endingTime}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Ending Time</option>\n          {location.pathname === \"/tasks\"\n            ? times.map((time) => {\n                return createOptions(time);\n              })\n            : shortenTimesArray(taskStartingTime, taskEndingTime, times).map(\n                (time) => {\n                  return createOptions(time);\n                }\n              )}\n        </select>\n        <select\n          id=\"quadrant\"\n          name=\"quadrant\"\n          value={formState.quadrant}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Quadrant (optional)</option>\n          {quadrants.map((quadrant) => {\n            return createQuadrantOptions(quadrant);\n          })}\n        </select>\n        <input type=\"submit\" onClick={handleFormSubmit} />\n      </form>\n      {error && <div className=\"error\">Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default CreateForm;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js",["107","108","109"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport { UPDATE_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nconst Account = () => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n\n  const { loading, data, refetch } = useQuery(QUERY_USER);\n  console.log(data);\n\n  const [update, { error, updateData }] = useMutation(UPDATE_USER, {\n    refetchQueries: [\n      {\n        query: QUERY_USER,\n      },\n    ],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await update({\n        variables: { ...formState },\n      });\n      // window.location.replace(\"/tasks\");\n      // refetch();\n      alert(\"Successfully updated account\");\n    } catch (e) {\n      console.error(e);\n      alert(\"Error Updating Account\");\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        username: data.user.username,\n        email: data.user.email,\n        password: \"\",\n      });\n\n      if (updateData) {\n        refetch();\n      }\n    }\n  }, [data, updateData]); //add update data\n  return (\n    <div className=\"account-form-div create-task-wrapper\">\n      {loading ? (\n        <div className=\"loading-div\">\n          <img\n            className=\"loading\"\n            src={\"./Pics/loading-gif.gif\"}\n            alt=\"loading...\"\n          />\n        </div>\n      ) : (\n        <>\n          {Auth.loggedIn() ? (\n            <form className=\"account-form create-form\">\n              <h4 className=\"acount-heading\">Account</h4>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Username\"\n                id=\"username-username\"\n                value={formState.username || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                id=\"username-email\"\n                value={formState.email || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                id=\"password-login\"\n                value={formState.password || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input type=\"submit\" onClick={handleFormSubmit} />\n              <p>\n                <span>\n                  Enter password only if you would like it to be updated.\n                </span>\n              </p>\n            </form>\n          ) : (\n            <p className=\"login-please\">\n              You need to be logged in to edit this Step. Please{\" \"}\n              <span>\n                &nbsp;\n                <Link to=\"/login\">login</Link> or&nbsp;\n                <Link to=\"/signup\">signup.</Link>\n              </span>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Account;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Footer/index.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/utils.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task/index.js",["110","111","112","113","114","115","116","117","118","119"],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditStep.js",["120"],"import { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_STEP } from \"../utils/queries\";\nimport { UPDATE_STEP } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  times,\n  createOptions,\n  createQuadrantOptions,\n  quadrants,\n} from \"../utils/utils\";\n\nimport Auth from \"../utils/auth\";\n\nconst EditStep = () => {\n  const params = useParams();\n\n  const { loading, data } = useQuery(QUERY_STEP, {\n    variables: {\n      stepId: params.id,\n    },\n  });\n  console.log(data);\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n    quadrant: \"\",\n  });\n\n  const [updateStep, { error, updateData }] = useMutation(UPDATE_STEP);\n\n  const onChange = (e) => {\n    console.log(e.target);\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    if (\n      formState.name === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    try {\n      const { updateData } = await updateStep({\n        variables: { ...formState, _id: data.step._id },\n      });\n      console.log(updateData);\n      window.location.replace(`/step/${data.step._id}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        name: data.step.name,\n        notes: data.step.notes,\n        startingTime: data.step.startingTime,\n        endingTime: data.step.endingTime,\n        quadrant: data.step.quadrant,\n      });\n    }\n  }, [data, updateData]);\n\n  return (\n    <div className=\"edit-task-container step-edit-container \">\n      {Auth.loggedIn() ? (\n        <div className=\"edit-task-wrapper step-edit-wrapper create-task-wrapper\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              <form className=\"create-form\" onSubmit={handleFormSubmit}>\n                <h1>Edit Step</h1>\n                <label>\n                  Select Starting Time\n                  <select\n                    id=\"start\"\n                    name=\"startingTime\"\n                    value={formState.startingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Select Ending Time\n                  <select\n                    id=\"end\"\n                    name=\"endingTime\"\n                    value={formState.endingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Name:\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={formState.name || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n\n                <label>\n                  Notes:\n                  <textarea\n                    type=\"text\"\n                    name=\"notes\"\n                    id=\"notes\"\n                    value={formState.notes || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n                <label>\n                  <select\n                    id=\"quadrant\"\n                    name=\"quadrant\"\n                    value={formState.quadrant || \"\"}\n                    onChange={onChange}\n                  >\n                    {!formState.quadrant ? (\n                      <option value={\"default\"}>Select Quadrant</option>\n                    ) : (\n                      <option value={\"\"}>Remove Quadrant</option>\n                    )}\n                    {quadrants.map((quadrant) => {\n                      return createQuadrantOptions(quadrant);\n                    })}\n                  </select>\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n                <Link to={`/step/${data.step._id}`}>Back to Step</Link>\n              </form>\n            </>\n          )}\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to edit this Step. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default EditStep;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneStep.js",["121","122"],"import { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_STEP } from \"../utils/queries\";\nimport { useParams } from \"react-router-dom\";\nimport { formatTime } from \"../utils/utils\";\nimport CreateForm from \"../components/CreateForm\";\nimport Auth from \"../utils/auth\";\nimport Task from \"../components/Task\";\n\nconst OneStep = () => {\n  const params = useParams();\n  console.log(params.id);\n\n  const { loading, data } = useQuery(QUERY_STEP, {\n    variables: {\n      stepId: params.id,\n    },\n  });\n\n  console.log(data);\n\n  return (\n    <div className=\"one-task-wrapper\">\n      {Auth.loggedIn() ? (\n        <div className=\"steps-and-task-container\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              <div\n                className={\n                  data.step.quadrant\n                    ? `${data.step.quadrant} one-task`\n                    : \"one-task\"\n                }\n              >\n                <p>\n                  {data.step.quadrant ? (\n                    <span>{data.step.quadrant}</span>\n                  ) : (\n                    <></>\n                  )}\n                  {formatTime(data.step.startingTime)}-\n                  {formatTime(data.step.endingTime)}\n                </p>\n                <p>Name: {data.step.name}</p>\n                <div className=\"notes-div\">\n                  <h4>Notes:</h4>\n                  <p>{data.step.notes}</p>\n                </div>\n                <div className=\"edit-or-back\">\n                  <Link id=\"back-link\" to={`/task/${data.step.task}`}>\n                    Back\n                  </Link>\n                  <Link to={`/step/edit/${data.step._id}`}>Edit</Link>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to see this Step. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default OneStep;\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":12,"column":11,"nodeType":"134","endLine":12,"endColumn":40},{"ruleId":"127","severity":1,"message":"135","line":7,"column":20,"nodeType":"129","messageId":"130","endLine":7,"endColumn":29},{"ruleId":"127","severity":1,"message":"136","line":13,"column":23,"nodeType":"129","messageId":"130","endLine":13,"endColumn":28},{"ruleId":"127","severity":1,"message":"137","line":13,"column":30,"nodeType":"129","messageId":"130","endLine":13,"endColumn":40},{"ruleId":"127","severity":1,"message":"138","line":4,"column":22,"nodeType":"129","messageId":"130","endLine":4,"endColumn":33},{"ruleId":"127","severity":1,"message":"139","line":16,"column":24,"nodeType":"129","messageId":"130","endLine":16,"endColumn":33},{"ruleId":"127","severity":1,"message":"140","line":30,"column":13,"nodeType":"129","messageId":"130","endLine":30,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":118,"column":32,"nodeType":"143","messageId":"144","endLine":118,"endColumn":34},{"ruleId":"127","severity":1,"message":"136","line":34,"column":24,"nodeType":"129","messageId":"130","endLine":34,"endColumn":29},{"ruleId":"127","severity":1,"message":"145","line":9,"column":26,"nodeType":"129","messageId":"130","endLine":9,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":45,"column":11,"nodeType":"134","endLine":45,"endColumn":43},{"ruleId":"127","severity":1,"message":"145","line":11,"column":27,"nodeType":"129","messageId":"130","endLine":11,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":47,"column":11,"nodeType":"134","endLine":47,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":182,"column":6,"nodeType":"148","endLine":182,"endColumn":17,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"136","line":18,"column":20,"nodeType":"129","messageId":"130","endLine":18,"endColumn":25},{"ruleId":"127","severity":1,"message":"145","line":39,"column":15,"nodeType":"129","messageId":"130","endLine":39,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":63,"column":6,"nodeType":"148","endLine":63,"endColumn":24,"suggestions":"150"},{"ruleId":"127","severity":1,"message":"136","line":13,"column":33,"nodeType":"129","messageId":"130","endLine":13,"endColumn":38},{"ruleId":"127","severity":1,"message":"151","line":13,"column":40,"nodeType":"129","messageId":"130","endLine":13,"endColumn":59},{"ruleId":"127","severity":1,"message":"152","line":17,"column":33,"nodeType":"129","messageId":"130","endLine":17,"endColumn":42},{"ruleId":"127","severity":1,"message":"153","line":17,"column":44,"nodeType":"129","messageId":"130","endLine":17,"endColumn":67},{"ruleId":"127","severity":1,"message":"139","line":20,"column":24,"nodeType":"129","messageId":"130","endLine":20,"endColumn":33},{"ruleId":"141","severity":1,"message":"154","line":30,"column":27,"nodeType":"143","messageId":"144","endLine":30,"endColumn":29},{"ruleId":"127","severity":1,"message":"155","line":32,"column":17,"nodeType":"129","messageId":"130","endLine":32,"endColumn":32},{"ruleId":"127","severity":1,"message":"155","line":42,"column":15,"nodeType":"129","messageId":"130","endLine":42,"endColumn":30},{"ruleId":"127","severity":1,"message":"140","line":65,"column":13,"nodeType":"129","messageId":"130","endLine":65,"endColumn":21},{"ruleId":"141","severity":1,"message":"154","line":109,"column":30,"nodeType":"143","messageId":"144","endLine":109,"endColumn":32},{"ruleId":"127","severity":1,"message":"136","line":34,"column":24,"nodeType":"129","messageId":"130","endLine":34,"endColumn":29},{"ruleId":"127","severity":1,"message":"156","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":18},{"ruleId":"127","severity":1,"message":"157","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":12},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'DeleteData' is assigned a value but never used.","'QUERY_STEPS' is defined but never used.","'errorTask' is assigned a value but never used.","'taskData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["160"],["161"],"'changeCompletedData' is assigned a value but never used.","'errorStep' is assigned a value but never used.","'changeCompletedStepData' is assigned a value but never used.","Expected '===' and instead saw '=='.","'updateCompleted' is assigned a value but never used.","'CreateForm' is defined but never used.","'Task' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [formState, refetch]",{"range":"166","text":"167"},"Update the dependencies array to be: [data, refetch, updateData]",{"range":"168","text":"169"},[4467,4478],"[formState, refetch]",[1398,1416],"[data, refetch, updateData]"]