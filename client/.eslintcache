[{"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js":"1","/Users/karenvillagomez/Weekly-Shedular/client/src/App.js":"2","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js":"3","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js":"4","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task.js":"5","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js":"6","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js":"7","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js":"8","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js":"9","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js":"10","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js":"11","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js":"12","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/times.js":"13","/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js":"14","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js":"15","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js":"16"},{"size":219,"mtime":1654289958063,"results":"17","hashOfConfig":"18"},{"size":2863,"mtime":1657733622508,"results":"19","hashOfConfig":"18"},{"size":1467,"mtime":1657925069042,"results":"20","hashOfConfig":"18"},{"size":2137,"mtime":1657920079247,"results":"21","hashOfConfig":"18"},{"size":569,"mtime":1657504484379,"results":"22","hashOfConfig":"18"},{"size":876,"mtime":1657762331562,"results":"23","hashOfConfig":"18"},{"size":1376,"mtime":1657765469221,"results":"24","hashOfConfig":"18"},{"size":3741,"mtime":1657738347036,"results":"25","hashOfConfig":"18"},{"size":1564,"mtime":1657738176863,"results":"26","hashOfConfig":"18"},{"size":1086,"mtime":1656960332241,"results":"27","hashOfConfig":"18"},{"size":1847,"mtime":1657762504757,"results":"28","hashOfConfig":"18"},{"size":2126,"mtime":1657763203041,"results":"29","hashOfConfig":"18"},{"size":2234,"mtime":1657381393282,"results":"30","hashOfConfig":"18"},{"size":4124,"mtime":1657668472791,"results":"31","hashOfConfig":"18"},{"size":2829,"mtime":1657736925222,"results":"32","hashOfConfig":"18"},{"size":2586,"mtime":1657740697895,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"b5snaa",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js",[],["75","76"],"/Users/karenvillagomez/Weekly-Shedular/client/src/App.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js",["77","78","79"],"import { Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nconst Homepage = () => {\n  return (\n    <div className=\"homepage-wrapper\">\n      <div className=\"homepage-heading\">\n        <h1>Welcome to Weekly Shedular</h1>\n      </div>\n      <div className=\"banner-container\">\n        <div className=\"banner\">\n          <img src=\"./Pics/banner.jpg\"></img>\n        </div>\n        <div className=\"banner stack-top\"></div>\n      </div>\n      <div className=\"organize\">\n        <h4>Organize</h4>\n        <p>\n          {\" \"}\n          This appliation helps to organize your weekly schedule Lorem ipsum\n          dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh\n          euismod tincidunt ut laoreet dolore magna.{\" \"}\n        </p>\n      </div>\n      <div className=\"schedule\">\n        <h4>Schedule</h4>\n        <p>\n          {\" \"}\n          This appliation helps to organize your weekly schedule Lorem ipsum\n          dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh\n          euismod tincidunt ut laoreet dolore magna.{\" \"}\n        </p>\n      </div>\n      <div className=\"plan\">\n        <h4>Strategize</h4>\n        <p>\n          {\" \"}\n          This appliation helps to organize your weekly schedule Lorem ipsum\n          dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh\n          euismod tincidunt ut laoreet dolore magna.{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js",["80"],"import { useQuery } from \"@apollo/client\";\nimport { QUERY_TASKS } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport Task from \"../components/Task\";\nimport Auth from \"../utils/auth\";\nimport { useState, useEffect } from \"react\";\nimport CreateForm from \"../components/CreateForm\";\nimport { days } from \"../utils/times\";\nconst Tasks = () => {\n  const [day, setDay] = useState(\"Monday\");\n\n  const { loading, data } = useQuery(QUERY_TASKS, {\n    variables: {\n      selectedDay: day,\n    },\n  });\n\n  const tasks = data?.tasks || [];\n  const selectDay = (e) => {\n    if (e.target.type === \"li\") {\n      console.log(e.target.id);\n      setDay(e.target.id);\n    }\n  };\n  return (\n    <div className=\"tasks-wrapper\">\n      <div className=\"select-day-div\">\n        <ul onClick={selectDay}>\n          {days.map((loopingDay, i) => {\n            return (\n              <li\n                type=\"li\"\n                id={loopingDay}\n                key={loopingDay}\n                className={day === loopingDay ? \"selected-day\" : \"nav-link\"}\n              >\n                {loopingDay}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      {Auth.loggedIn() ? (\n        <div className=\"all-tasks-wrapper\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <>\n              {tasks.length >= 1 ? (\n                <div className=\"all-tasks\">\n                  {tasks.map((task, i) => {\n                    return <Task data={task} key={i} />;\n                  })}\n                </div>\n              ) : (\n                <p className=\"no-tasks\">No Tasks</p>\n              )}\n            </>\n          )}\n          <div className=\"create-form-div\">\n            <CreateForm setDay={setDay} day={day} />\n          </div>\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to see your Tasks. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\"> login</Link> or &nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Tasks;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js",["81"],"import { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASK } from \"../utils/queries\";\nimport { UPDATE_TASK } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { times, createOptions } from \"../utils/times\";\n\nimport Auth from \"../utils/auth\";\n\nconst EditTask = () => {\n  const params = useParams();\n\n  const { loading, data } = useQuery(QUERY_TASK, {\n    variables: {\n      taskId: params.id,\n    },\n  });\n  console.log(data);\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n  });\n\n  const [updateTask, { error, updateData }] = useMutation(UPDATE_TASK);\n\n  const onChange = (e) => {\n    console.log(e.target);\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { updateData } = await updateTask({\n        variables: { ...formState, _id: data.task._id },\n      });\n      console.log(updateData);\n      window.location.replace(`/task/${data.task._id}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        name: data.task.name,\n        notes: data.task.notes,\n        startingTime: data.task.startingTime,\n        endingTime: data.task.endingTime,\n      });\n    }\n  }, [data, updateData]);\n\n  return (\n    <div>\n      <h1>Edit task</h1>\n      {Auth.loggedIn() ? (\n        <div className=\"edit-task-wrapper\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <div>\n              <form onSubmit={handleFormSubmit}>\n                <label>\n                  Select Starting Time\n                  <select\n                    id=\"start\"\n                    name=\"startingTime\"\n                    value={formState.startingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Select Ending Time\n                  <select\n                    id=\"end\"\n                    name=\"endingTime\"\n                    value={formState.endingTime || \"\"}\n                    onChange={onChange}\n                  >\n                    {times.map((time) => {\n                      return createOptions(time);\n                    })}\n                  </select>\n                </label>\n                <label>\n                  Name:\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={formState.name || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n                <label>\n                  Notes:\n                  <input\n                    id=\"notes\"\n                    type=\"text\"\n                    name=\"notes\"\n                    value={formState.notes || \"\"}\n                    onChange={onChange}\n                  />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n              </form>\n              <Link to={`/task/${data.task._id}`}>Back to Task</Link>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p>\n          You need to be logged in to see this Task. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default EditTask;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js",["82"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nconst Login = (props) => {\n  console.log(\"Hi\");\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n      //   window.location.replace(\"/lista_contacto\");\n      console.log(Auth.getProfile());\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <div className=\"login-form-div\">\n      <form className=\"login-form\">\n        <h4 className=\"login-heading\">Login</h4>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          id=\"username-email\"\n          value={formState.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          id=\"password-login\"\n          value={formState.password}\n          onChange={handleChange}\n          required\n        />\n        {error && <div className=\"error\">{error.message}</div>}\n        <input type=\"submit\" onClick={handleFormSubmit} />\n        <p>\n          <span> Don't have an account? &nbsp; </span>{\" \"}\n          <a href=\"/signup\"> Sign up</a>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default Login;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js",["83"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nconst Signup = (props) => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n  const [signup, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await signup({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      window.location.replace(\"/tasks\");\n    } catch (e) {\n      console.error(e);\n      // alert(\"This email was already found in the database\");\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n      username: \"\",\n    });\n  };\n  return (\n    <div className=\"signup-form-div\">\n      <form className=\"signup-form\">\n        <h4 className=\"signup-heading\">Sign Up</h4>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          id=\"username-username\"\n          value={formState.username}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          id=\"username-email\"\n          value={formState.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          id=\"password-login\"\n          value={formState.password}\n          onChange={handleChange}\n          required\n        />\n        {error && <div className=\"error\">{error.message}</div>}\n        <input type=\"submit\" onClick={handleFormSubmit} />\n        <p>\n          <span>Have have an account? &nbsp; </span> <a href=\"/login\">Login</a>\n        </p>\n      </form>\n    </div>\n  );\n};\nexport default Signup;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/times.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js",["84","85","86","87","88","89","90"],"import React, { useEffect, useState } from \"react\";\nimport { selectHttpOptionsAndBody, useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { CREATE_TASK } from \"../../utils/mutations\";\nimport { times, createOptions, days } from \"../../utils/times\";\nimport { QUERY_TASKS, QUERY_DUPLICATE } from \"../../utils/queries\";\n\nconst CreateForm = ({ setDay, day }) => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n    day: \"\",\n  });\n  const { loading, data, refetch } = useQuery(QUERY_DUPLICATE, {\n    variables: {\n      startingTime: formState.startingTime,\n      endingTime: formState.endingTime,\n      day: formState.day,\n    },\n  });\n\n  const [createTask, { error }] = useMutation(CREATE_TASK, {\n    refetchQueries: [\n      {\n        query: QUERY_TASKS,\n        variables: { selectedDay: day },\n      },\n    ],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n    console.log(data);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    if (formState.startingTime == formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    if (!data.duplicate) {\n      try {\n        const taskData = await createTask({\n          variables: { ...formState },\n        });\n        setDay(formState.day);\n        // clear form values\n        setFormState({\n          name: \"\",\n          notes: \"\",\n          startingTime: \"\",\n          endingTime: \"\",\n          day: \"\",\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      alert(\"This time already has a task\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"Use effect\");\n    refetch();\n  }, [formState]);\n  return (\n    <div className=\"create-task-wrapper\">\n      <div className=\"create-task-heading\">\n        <h4>Create Form</h4>\n      </div>\n\n      <form className=\"create-form\">\n        <div className=\"name-notes-div\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            id=\"task-name\"\n            value={formState.name}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"notes\"\n            placeholder=\"Notes\"\n            id=\"task-notes\"\n            value={formState.notes}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <select\n          required\n          id=\"day\"\n          name=\"day\"\n          value={formState.day}\n          onChange={handleChange}\n        >\n          <option value=\"disabled\" disabled={true} defaultValue>\n            Select Day\n          </option>\n          {days.map((day) => {\n            return (\n              <option value={day} key={day}>\n                {day}\n              </option>\n            );\n          })}\n        </select>\n        <select\n          id=\"start\"\n          name=\"startingTime\"\n          value={formState.startingTime}\n          onChange={handleChange}\n        >\n          <option value=\"disabled\" disabled={true} defaultValue>\n            Select Starting Time\n          </option>\n          {times.map((time) => {\n            return createOptions(time);\n          })}\n        </select>\n        <select\n          id=\"end\"\n          name=\"endingTime\"\n          value={formState.endingTime}\n          onChange={handleChange}\n        >\n          <option value=\"disabled\" disabled={true} defaultValue>\n            Select Ending Time\n          </option>\n          {times.map((time) => {\n            return createOptions(time);\n          })}\n        </select>\n        <input type=\"submit\" onClick={handleFormSubmit} />\n      </form>\n      {error && <div className=\"error\">Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default CreateForm;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js",["91","92"],"import { Link, useParams, useLocation } from \"react-router-dom\";\nimport Auth from \"../../utils/auth\";\nimport { useState, useEffect } from \"react\";\nconst Navbar = () => {\n  const location = useLocation();\n  const [navLink, setNavLink] = useState(\"\");\n  const logout = () => {\n    setNavLink(\"\");\n    Auth.logout();\n  };\n  const selectPage = (e) => {\n    if (e.target.className === \"link\") {\n      setNavLink(e.target.id);\n    }\n  };\n  useEffect(() => {\n    // If navbar is not used to change page (like if a link is used)\n    //state will still be updated\n    switch (location.pathname) {\n      case \"/tasks\":\n        setNavLink(\"See All Tasks\");\n        return;\n      case \"/login\":\n        setNavLink(\"Login\");\n        return;\n      case \"/signup\":\n        setNavLink(\"Signup\");\n        return;\n      case \"/\":\n        setNavLink(\"\");\n        return;\n      case \"/account\":\n        setNavLink(\"Account\");\n        return;\n    }\n  }, [location]);\n  return (\n    <div className=\"navbar-wrapper\">\n      <div className=\"navbar\">\n        <Link className=\"link\" to=\"/\">\n          Weekly Shedular\n        </Link>\n\n        <ul className=\"navbar-ul\" onClick={selectPage}>\n          <li className={navLink === \"See All Tasks\" ? \"selected\" : \"nav-link\"}>\n            <Link\n              id=\"See All Tasks\"\n              to=\"/tasks\"\n              style={{ textDecoration: \"none\" }}\n              className=\"link\"\n            >\n              See All Tasks\n            </Link>\n          </li>\n          {Auth.loggedIn() ? (\n            <>\n              <li className={navLink === \"Account\" ? \"selected\" : \"nav-link\"}>\n                <Link\n                  id=\"Account\"\n                  to=\"/account\"\n                  style={{ textDecoration: \"none\" }}\n                  className=\"link\"\n                >\n                  Account\n                </Link>\n              </li>\n              <li>\n                <button className=\"link\" onClick={logout}>\n                  Logout\n                </button>\n              </li>\n            </>\n          ) : (\n            <>\n              <li className={navLink === \"Login\" ? \"selected\" : \"nav-link\"}>\n                <Link\n                  id=\"Login\"\n                  to=\"/login\"\n                  className=\"link\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  Login\n                </Link>\n              </li>\n              <li className={navLink === \"Signup\" ? \"selected\" : \"nav-link\"}>\n                <Link\n                  id=\"Signup\"\n                  to=\"/signup\"\n                  className=\"link\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  Sign up\n                </Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js",["93","94","95","96"],"import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport { UPDATE_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nconst Account = () => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n\n  const { loading, data, refetch } = useQuery(QUERY_USER);\n  console.log(data);\n\n  const [update, { error, updateData }] = useMutation(UPDATE_USER, {\n    refetchQueries: [\n      {\n        query: QUERY_USER,\n      },\n    ],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await update({\n        variables: { ...formState },\n      });\n      // window.location.replace(\"/tasks\");\n      // refetch();\n      alert(\"Successfully updated account\");\n    } catch (e) {\n      console.error(e);\n      alert(\"Error Updating Account\");\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        username: data.user.username,\n        email: data.user.email,\n        password: \"\",\n      });\n\n      if (updateData) {\n        refetch();\n      }\n    }\n  }, [data, updateData]); //add update data\n  return (\n    <div className=\"signup-form-div\">\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <form className=\"signup-form\">\n          <h4 className=\"signup-heading\">Sign Up</h4>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            id=\"username-username\"\n            value={formState.username || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            id=\"username-email\"\n            value={formState.email || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            id=\"password-login\"\n            value={formState.password || \"\"}\n            onChange={handleChange}\n            required\n          />\n          <input type=\"submit\" onClick={handleFormSubmit} />\n          <p>\n            <span>Leave Password empty if you would not like it updated</span>\n          </p>\n        </form>\n      )}\n    </div>\n  );\n};\nexport default Account;\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":12,"column":11,"nodeType":"108","endLine":12,"endColumn":40},{"ruleId":"101","severity":1,"message":"109","line":6,"column":20,"nodeType":"103","messageId":"104","endLine":6,"endColumn":29},{"ruleId":"101","severity":1,"message":"110","line":28,"column":24,"nodeType":"103","messageId":"104","endLine":28,"endColumn":29},{"ruleId":"101","severity":1,"message":"111","line":9,"column":26,"nodeType":"103","messageId":"104","endLine":9,"endColumn":30},{"ruleId":"101","severity":1,"message":"111","line":11,"column":27,"nodeType":"103","messageId":"104","endLine":11,"endColumn":31},{"ruleId":"101","severity":1,"message":"112","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":34},{"ruleId":"101","severity":1,"message":"102","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":12},{"ruleId":"101","severity":1,"message":"113","line":18,"column":11,"nodeType":"103","messageId":"104","endLine":18,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":47,"column":32,"nodeType":"116","messageId":"117","endLine":47,"endColumn":34},{"ruleId":"101","severity":1,"message":"118","line":57,"column":15,"nodeType":"103","messageId":"104","endLine":57,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":79,"column":6,"nodeType":"121","endLine":79,"endColumn":17,"suggestions":"122"},{"ruleId":"101","severity":1,"message":"123","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":19,"column":5,"nodeType":"126","messageId":"127","endLine":35,"endColumn":6},{"ruleId":"101","severity":1,"message":"105","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":12},{"ruleId":"101","severity":1,"message":"110","line":16,"column":20,"nodeType":"103","messageId":"104","endLine":16,"endColumn":25},{"ruleId":"101","severity":1,"message":"111","line":37,"column":15,"nodeType":"103","messageId":"104","endLine":37,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":61,"column":6,"nodeType":"121","endLine":61,"endColumn":24,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'selectHttpOptionsAndBody' is defined but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'taskData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'useParams' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [formState, refetch]",{"range":"137","text":"138"},"Update the dependencies array to be: [data, refetch, updateData]",{"range":"139","text":"140"},[2036,2047],"[formState, refetch]",[1356,1374],"[data, refetch, updateData]"]