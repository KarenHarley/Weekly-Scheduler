[{"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js":"1","/Users/karenvillagomez/Weekly-Shedular/client/src/App.js":"2","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js":"3","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js":"4","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task.js":"5","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js":"6","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js":"7","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js":"8","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/times.js":"9","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js":"10"},{"size":219,"mtime":1654289958063,"results":"11","hashOfConfig":"12"},{"size":1110,"mtime":1656348296031,"results":"13","hashOfConfig":"12"},{"size":260,"mtime":1654360512158,"results":"14","hashOfConfig":"12"},{"size":791,"mtime":1654740803000,"results":"15","hashOfConfig":"12"},{"size":426,"mtime":1654724762658,"results":"16","hashOfConfig":"12"},{"size":430,"mtime":1654726486734,"results":"17","hashOfConfig":"12"},{"size":908,"mtime":1654740950541,"results":"18","hashOfConfig":"12"},{"size":4380,"mtime":1654964303173,"results":"19","hashOfConfig":"12"},{"size":648,"mtime":1654961338304,"results":"20","hashOfConfig":"12"},{"size":1108,"mtime":1655493491319,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"b5snaa",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js",[],["46","47"],"/Users/karenvillagomez/Weekly-Shedular/client/src/App.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js",["48"],"import { Link } from \"react-router-dom\";\n\nconst Homepage = () => {\n  return (\n    <div className=\"homepage-wrapper\">\n      <div className=\"homepage-heading\">\n        <h1>Welcome to Weekly Shedular</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js",["49"],"import { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_TASKS } from \"../utils/queries\";\n\nimport Task from \"../components/Task\";\nconst Tasks = () => {\n  let id = \"629e57ed0abac12714b8d215\";\n\n  const { loading, data } = useQuery(QUERY_TASKS, {\n    variables: {\n      userId: id,\n    },\n  });\n\n  console.log(data);\n\n  const tasks = data?.tasks || [];\n\n  return (\n    <div className=\"tasks-wrapper\">\n      <div className=\"task-heading\">\n        <h1>Welcome to the Tasks Page</h1>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <div>\n            {tasks.map((task, i) => {\n              return <Task data={task} key={i} />;\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js",["50","51"],"import { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASK } from \"../utils/queries\";\nimport { UPDATE_TASK } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { times } from \"../utils/times\";\nconst EditTask = () => {\n  const params = useParams();\n\n  const { loading, data } = useQuery(QUERY_TASK, {\n    variables: {\n      taskId: params.id,\n    },\n  });\n  console.log(data);\n\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n  });\n\n  const [updateTask, { error, updateData }] = useMutation(UPDATE_TASK);\n\n  const onChange = (e) => {\n    console.log(e.target);\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const createOptions = (time) => {\n    //set value to 1 in \"1:00 am\"\n    let optionValue = time.split(\":\")[0];\n    let optionKey = time.split(\":\")[0];\n    //if the string has \"pm\" set value to 13 in  \"1 pm\"\n    if (time.split(\" \")[1] === \"pm\") {\n      optionValue = Number(time.split(\":\")[0]) + 12;\n      optionKey = Number(time.split(\":\")[0]) + 12;\n    }\n    // if the string has \"30\" set the value and key to 1.5 in \"1 am\"\n    if (\n      time.split(\" \")[0].split(\":\")[1] === \"30\" &&\n      time.split(\" \")[1] === \"am\"\n    ) {\n      optionValue = Number(time.split(\":\")[0]) + 0.5;\n      optionKey = Number(time.split(\":\")[0]) + 0.5;\n    } else if (\n      // if the string has \"30\" set the value and key to 13.5 in \"1 pm\"\n      time.split(\" \")[0].split(\":\")[1] === \"30\" &&\n      time.split(\" \")[1] === \"pm\"\n    ) {\n      optionValue = Number(time.split(\":\")[0]) + 12.5;\n      optionKey = Number(time.split(\":\")[0]) + 12.5;\n    }\n    return (\n      <option value={optionValue} key={optionKey}>\n        {time}\n      </option>\n    );\n  };\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { updateData } = await updateTask({\n        variables: { ...formState, _id: data.task._id },\n      });\n      console.log(updateData);\n      // window.location.replace(\"/gracias\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        name: data.task.name,\n        notes: data.task.notes,\n        startingTime: data.task.startingTime,\n        endingTime: data.task.endingTime,\n      });\n    }\n  }, [data]);\n\n  return (\n    <div className=\"edit-task-wrapper\">\n      <div className=\"edit-task-heading\">\n        <h1>Edit task</h1>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <div>\n            <form onSubmit={handleFormSubmit}>\n              <label>\n                Select Starting Time\n                <select\n                  id=\"start\"\n                  name=\"startingTime\"\n                  value={formState.startingTime}\n                  onChange={onChange}\n                >\n                  {times.map((time) => {\n                    return createOptions(time);\n                  })}\n                </select>\n              </label>\n              <label>\n                Select Ending Time\n                <select\n                  id=\"end\"\n                  name=\"endingTime\"\n                  value={formState.endingTime}\n                  onChange={onChange}\n                >\n                  {times.map((time) => {\n                    return createOptions(time);\n                  })}\n                </select>\n              </label>\n              <label>\n                Name:\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={formState.name}\n                  onChange={onChange}\n                />\n              </label>\n              <label>\n                Notes:\n                <input\n                  id=\"notes\"\n                  type=\"text\"\n                  name=\"notes\"\n                  value={formState.notes}\n                  onChange={onChange}\n                />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n            <Link to={`/task/${data.task._id}`}>Back to Task</Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditTask;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/times.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":14},{"ruleId":"56","severity":1,"message":"60","line":26,"column":24,"nodeType":"58","messageId":"59","endLine":26,"endColumn":29},{"ruleId":"56","severity":1,"message":"61","line":26,"column":31,"nodeType":"58","messageId":"59","endLine":26,"endColumn":41},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'updateData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]