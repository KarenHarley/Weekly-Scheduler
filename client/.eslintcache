[{"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js":"1","/Users/karenvillagomez/Weekly-Shedular/client/src/App.js":"2","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js":"3","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js":"4","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js":"5","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js":"6","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js":"7","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js":"8","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js":"9","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js":"10","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js":"11","/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js":"12","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js":"13","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js":"14","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Footer/index.js":"15","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/utils.js":"16","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task/index.js":"17","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditStep.js":"18","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneStep.js":"19"},{"size":219,"mtime":1654289958063,"results":"20","hashOfConfig":"21"},{"size":3313,"mtime":1660948699670,"results":"22","hashOfConfig":"21"},{"size":2063,"mtime":1667341186873,"results":"23","hashOfConfig":"21"},{"size":3878,"mtime":1664208441236,"results":"24","hashOfConfig":"21"},{"size":2053,"mtime":1661994783528,"results":"25","hashOfConfig":"21"},{"size":4555,"mtime":1664208549908,"results":"26","hashOfConfig":"21"},{"size":5449,"mtime":1667340803519,"results":"27","hashOfConfig":"21"},{"size":3448,"mtime":1663185149964,"results":"28","hashOfConfig":"21"},{"size":1086,"mtime":1656960332241,"results":"29","hashOfConfig":"21"},{"size":2492,"mtime":1667341409724,"results":"30","hashOfConfig":"21"},{"size":2770,"mtime":1663187970652,"results":"31","hashOfConfig":"21"},{"size":7381,"mtime":1667248790833,"results":"32","hashOfConfig":"21"},{"size":3570,"mtime":1667248886264,"results":"33","hashOfConfig":"21"},{"size":3350,"mtime":1667340403175,"results":"34","hashOfConfig":"21"},{"size":4061,"mtime":1660699178866,"results":"35","hashOfConfig":"21"},{"size":6981,"mtime":1664397953904,"results":"36","hashOfConfig":"21"},{"size":3166,"mtime":1667340240672,"results":"37","hashOfConfig":"21"},{"size":5457,"mtime":1667340794333,"results":"38","hashOfConfig":"21"},{"size":2236,"mtime":1667341547375,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"b5snaa",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karenvillagomez/Weekly-Shedular/client/src/index.js",[],["84","85"],"/Users/karenvillagomez/Weekly-Shedular/client/src/App.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Homepage.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Tasks.js",["86","87","88"],"import { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASKS } from \"../utils/queries\";\nimport { REMOVE_ALL_TASKS } from \"../utils/mutations\";\nimport { Link } from \"react-router-dom\";\nimport Task from \"../components/Task\";\nimport Auth from \"../utils/auth\";\nimport { useState, useEffect } from \"react\";\nimport CreateForm from \"../components/CreateForm\";\nimport { days } from \"../utils/utils\";\nconst Tasks = () => {\n  const [day, setDay] = useState(\"Monday\");\n  const [showForm, setShowForm] = useState(false);\n  const [deleteAll, { error, DeleteData }] = useMutation(REMOVE_ALL_TASKS, {\n    refetchQueries: [\n      {\n        query: QUERY_TASKS,\n        variables: { selectedDay: day },\n      },\n    ],\n  });\n  const { loading, data } = useQuery(QUERY_TASKS, {\n    variables: {\n      selectedDay: day,\n    },\n  });\n\n  const tasks = data?.tasks || [];\n  const selectDay = (e) => {\n    if (e.target.type === \"li\") {\n      console.log(e.target.id);\n      setDay(e.target.id);\n    }\n  };\n  const changeShowForm = () => {\n    setShowForm((prev) => !prev);\n  };\n  const deleteAllTasks = async () => {\n    try {\n      const { data } = await deleteAll({\n        variables: { selectedDay: day },\n      });\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return (\n    <div className=\"tasks-wrapper\">\n      <div className=\"select-day-div\">\n        <ul onClick={selectDay}>\n          <li className=\"nav-link pre-new-section \">\n            <button\n              onClick={() => {\n                const confirmBox = window.confirm(\n                  `Do you really want to delete ALL the ${day} tasks?`\n                );\n                if (confirmBox === true) {\n                  deleteAllTasks();\n                }\n              }}\n              id=\"delete\"\n              style={{ textDecoration: \"none\" }}\n              className=\"nav-button\"\n            >\n              Delete All\n            </button>\n          </li>\n          {days.map((loopingDay, i) => {\n            return (\n              <li\n                type=\"li\"\n                id={loopingDay}\n                key={loopingDay}\n                className={day === loopingDay ? \"selected-day\" : \"nav-link\"}\n              >\n                {loopingDay}\n              </li>\n            );\n          })}\n          <li className=\"nav-link new-section\">\n            <button\n              onClick={changeShowForm}\n              id=\"create\"\n              style={{ textDecoration: \"none\" }}\n              className=\"nav-button\"\n            >\n              {!showForm ? \"Create Task\" : \"Hide Create Form\"}\n            </button>\n          </li>\n        </ul>\n      </div>\n      {Auth.loggedIn() ? (\n        <div className=\"all-tasks-wrapper\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              {tasks.length >= 1 ? (\n                <div className=\"all-tasks\">\n                  {tasks.map((task, i) => {\n                    return <Task data={task} key={i} day={day} />;\n                  })}\n                </div>\n              ) : (\n                <p className=\"no-tasks\">No Tasks</p>\n              )}\n            </>\n          )}\n          {showForm ? (\n            <div className=\"create-form-div\">\n              <CreateForm setDay={setDay} day={day} />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      ) : (\n        <div className=\"login-please\">\n          <span>\n            You need to be logged in to see your Tasks. Please&nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tasks;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/utils/queries.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneTask.js",["89","90","91","92"],"import { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_TASK, QUERY_STEPS } from \"../utils/queries\";\nimport { REMOVE_TASK } from \"../utils/mutations\";\nimport { useParams } from \"react-router-dom\";\nimport { formatTime } from \"../utils/utils\";\nimport CreateForm from \"../components/CreateForm\";\nimport Auth from \"../utils/auth\";\nimport Task from \"../components/Task\";\n\nconst OneTask = () => {\n  const params = useParams();\n  console.log(params.id);\n  const [addSteps, setaddSteps] = useState(false);\n  const [deleteTask, { errorTask }] = useMutation(REMOVE_TASK);\n\n  const { loading, data } = useQuery(QUERY_TASK, {\n    variables: {\n      taskId: params.id,\n    },\n  });\n\n  const changeAddStep = () => {\n    setaddSteps((prev) => !prev);\n  };\n\n  const deleteOneTask = async () => {\n    try {\n      const taskData = await deleteTask({\n        variables: {\n          taskId: params.id,\n        },\n      });\n      window.location.replace(\"/tasks\");\n      //create mutation in all tasks (see notes)\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log(data);\n\n  return (\n    <div className=\"one-task-wrapper\">\n      {Auth.loggedIn() ? (\n        <div className=\"steps-and-task-container\">\n          {loading ? (\n            <div className=\"loading-div\">\n              <img\n                className=\"loading\"\n                src={\"./Pics/loading-gif.gif\"}\n                alt=\"loading...\"\n              />\n            </div>\n          ) : (\n            <>\n              <div className=\"one-task-and-create-form\">\n                <div\n                  className={\n                    data.task.quadrant\n                      ? `${data.task.quadrant} one-task`\n                      : \"one-task\"\n                  }\n                >\n                  <p>\n                    {data.task.quadrant ? (\n                      <span>{data.task.quadrant}</span>\n                    ) : (\n                      <></>\n                    )}\n                    {formatTime(data.task.startingTime)}-\n                    {formatTime(data.task.endingTime)}\n                  </p>\n                  <p className=\"name-heading\">\n                    {data.task.name}{\" \"}\n                    <button\n                      id=\"button-show-form\"\n                      onClick={() => {\n                        const confirmBox = window.confirm(\n                          \"Do you really want to delete this task?\"\n                        );\n                        if (confirmBox === true) {\n                          deleteOneTask();\n                        }\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </p>\n\n                  {data.task.notes ? (\n                    <div className=\"notes-div\">\n                      <h4>Notes:</h4>\n                      <p>{data.task.notes}</p>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n\n                  <div className=\"edit-or-show-form-div\">\n                    <button id=\"button-show-form\" onClick={changeAddStep}>\n                      {!addSteps ? \"Add Mini-Tasks\" : \"Hide Create Form\"}\n                    </button>\n                    <Link to={`/task/edit/${data.task._id}`}>Edit</Link>\n                  </div>\n                </div>\n                {addSteps ? (\n                  <div className=\"create-step-form one-task-form\">\n                    <CreateForm\n                      taskStartingTime={data.task.startingTime}\n                      taskEndingTime={data.task.endingTime}\n                    />\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              {data.task.steps != 0 ? (\n                <div className=\"step-container\">\n                  <h4>Mini-Tasks to Accomplish this larger task</h4>\n                  {data.task.steps.map((loopingStep, i) => {\n                    return <Task data={loopingStep} key={i} />;\n                  })}\n                </div>\n              ) : (\n                <></>\n              )}\n            </>\n          )}\n        </div>\n      ) : (\n        <p className=\"login-please\">\n          You need to be logged in to see this Task. Please{\" \"}\n          <span>\n            &nbsp;\n            <Link to=\"/login\">login</Link> or&nbsp;\n            <Link to=\"/signup\">signup.</Link>\n          </span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default OneTask;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditTask.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/mutations.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/auth.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Login.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Signup.js",["93","94"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nconst Signup = (props) => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n  const [signup, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await signup({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      window.location.replace(\"/tasks\");\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n      username: \"\",\n    });\n  };\n  return (\n    <div className=\"signup-form-div\">\n      <div className=\"signup-banner-container login-banner-container\">\n        <div className=\"banner\">\n          <img src=\"./Pics/sign-up-pic.jpg\"></img>\n        </div>\n        <div className=\"welcome-div\">\n          <h1>Welcome</h1>\n          <p>\n            It's great to have you here. Let's accomplish a lot today! Create\n            the tasks and let us handle the rest, we have your back.\n          </p>\n        </div>\n        <div className=\"signup-banner login-banner login-stack-top\">\n          {\" \"}\n          <form className=\"signup-form\">\n            <h4 className=\"signup-heading\">Sign Up</h4>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              id=\"username-username\"\n              value={formState.username}\n              onChange={handleChange}\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              id=\"username-email\"\n              value={formState.email}\n              onChange={handleChange}\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              id=\"password-login\"\n              value={formState.password}\n              onChange={handleChange}\n              required\n            />\n            {error && <div className=\"error\">{error.message}</div>}\n            <input type=\"submit\" onClick={handleFormSubmit} />\n            <p>\n              <span>\n                Have have an account?&nbsp;<a href=\"/login\">Login</a>\n              </span>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Signup;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/CreateForm/index.js",["95"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_TASK, CREATE_STEP } from \"../../utils/mutations\";\nimport {\n  times,\n  createOptions,\n  days,\n  quadrants,\n  createQuadrantOptions,\n  shortenTimesArray,\n} from \"../../utils/utils\";\nimport {\n  QUERY_TASKS,\n  QUERY_TASK,\n  QUERY_DUPLICATE_TASK,\n  QUERY_DUPLICATE_STEP,\n} from \"../../utils/queries\";\n\n/*\nIMPORTANT!!!!!!!!! FIX SALT ISSUE!!!!!!!\n*/\nconst CreateForm = ({ setDay, day, taskStartingTime, taskEndingTime }) => {\n  const location = useLocation();\n  const params = useParams();\n  const [formState, setFormState] = useState({\n    name: \"\",\n    notes: \"\",\n    startingTime: \"\",\n    endingTime: \"\",\n    day: \"\",\n    quadrant: \"\",\n  });\n  //to only use one mutation\n  let QUERY;\n  if (location.pathname === \"/tasks\") {\n    QUERY = QUERY_DUPLICATE_TASK;\n  } else {\n    QUERY = QUERY_DUPLICATE_STEP;\n  }\n\n  const { data, refetch } = useQuery(QUERY, {\n    variables: {\n      startingTime: formState.startingTime,\n      endingTime: formState.endingTime,\n      day: formState.day,\n      task: params.id,\n    },\n  });\n\n  const [createTask, { error }] = useMutation(CREATE_TASK, {\n    refetchQueries: [\n      {\n        query: QUERY_TASKS,\n        variables: { selectedDay: day },\n      },\n    ],\n  });\n\n  const [createStep] = useMutation(CREATE_STEP, {\n    refetchQueries: [\n      {\n        query: QUERY_TASK,\n        variables: { taskId: params.id },\n      },\n    ],\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n  };\n  const createTaskInDB = async () => {\n    if (\n      formState.name === \"\" ||\n      formState.day === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Day, Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    if (!data.duplicateTask) {\n      try {\n        await createTask({\n          variables: { ...formState },\n        });\n        setDay(formState.day);\n        // clear form values\n        setFormState({\n          name: \"\",\n          notes: \"\",\n          startingTime: \"\",\n          endingTime: \"\",\n          day: \"\",\n          quadrant: \"\",\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      alert(\"This time already has a task\");\n      return;\n    }\n  };\n  const createStepInDB = async () => {\n    if (\n      formState.name === \"\" ||\n      formState.startingTime === \"\" ||\n      formState.endingTime === \"\"\n    ) {\n      alert(\"Task Name, StartingTime, and EndingTime are required.\");\n      return;\n    }\n    if (formState.startingTime === formState.endingTime) {\n      alert(\"Same start and ending time\");\n      return;\n    }\n    if (formState.startingTime > formState.endingTime) {\n      alert(\"Starting Time can not be later than the ending time\");\n      return;\n    }\n    if (taskStartingTime > formState.startingTime) {\n      alert(\"This mini-task's starting time starts before the parent task\");\n      return;\n    }\n    if (formState.endingTime > taskEndingTime) {\n      alert(\"This mini-task ends after the parent task time\");\n      return;\n    }\n    if (!data.duplicateStep) {\n      try {\n         await createStep({\n          variables: {\n            name: formState.name,\n            notes: formState.notes,\n            task: params.id,\n            startingTime: formState.startingTime,\n            endingTime: formState.endingTime,\n            quadrant: formState.quadrant,\n          },\n        });\n        // clear form values\n        setFormState({\n          name: \"\",\n          notes: \"\",\n          startingTime: \"\",\n          endingTime: \"\",\n          day: \"\",\n          quadrant: \"\",\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      alert(\"This time already has a task\");\n    }\n  };\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (location.pathname === \"/tasks\") {\n      createTaskInDB();\n    } else {\n      createStepInDB();\n    }\n  };\n  useEffect(() => {\n    refetch();\n  }, [formState]);\n  return (\n    <div className=\"create-task-wrapper\">\n      <form className=\"create-form\">\n        <div className=\"create-task-heading\">\n          {location.pathname === \"/tasks\" ? (\n            <h4>Create Task</h4>\n          ) : (\n            <h4>Create Mini-Tasks</h4>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          id=\"task-name\"\n          value={formState.name}\n          onChange={handleChange}\n          required\n        />\n        <textarea\n          type=\"text\"\n          name=\"notes\"\n          placeholder=\"Notes (optional)\"\n          id=\"task-notes\"\n          value={formState.notes}\n          onChange={handleChange}\n          required\n        />\n        {location.pathname === \"/tasks\" ? (\n          <select\n            required\n            id=\"day\"\n            name=\"day\"\n            value={formState.day}\n            onChange={handleChange}\n          >\n            <option value={\"default\"}>Select Day</option>\n            {days.map((day) => {\n              return (\n                <option value={day} key={day}>\n                  {day}\n                </option>\n              );\n            })}\n          </select>\n        ) : (\n          <></>\n        )}\n        <select\n          id=\"start\"\n          name=\"startingTime\"\n          value={formState.startingTime}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Starting Time</option>\n          {location.pathname === \"/tasks\"\n            ? times.map((time) => {\n                return createOptions(time);\n              })\n            : shortenTimesArray(taskStartingTime, taskEndingTime, times).map(\n                (time) => {\n                  return createOptions(time);\n                }\n              )}\n        </select>\n        <select\n          id=\"end\"\n          name=\"endingTime\"\n          value={formState.endingTime}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Ending Time</option>\n          {location.pathname === \"/tasks\"\n            ? times.map((time) => {\n                return createOptions(time);\n              })\n            : shortenTimesArray(taskStartingTime, taskEndingTime, times).map(\n                (time) => {\n                  return createOptions(time);\n                }\n              )}\n        </select>\n        <select\n          id=\"quadrant\"\n          name=\"quadrant\"\n          value={formState.quadrant}\n          onChange={handleChange}\n        >\n          <option value={\"default\"}>Select Quadrant (optional)</option>\n          {quadrants.map((quadrant) => {\n            return createQuadrantOptions(quadrant);\n          })}\n        </select>\n        <input type=\"submit\" onClick={handleFormSubmit} />\n      </form>\n      {error && <div className=\"error\">Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default CreateForm;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Navbar/index.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/Account.js",["96"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport { UPDATE_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nconst Account = () => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n\n  const { loading, data, refetch } = useQuery(QUERY_USER);\n  console.log(data);\n\n  const [update, { updateData }] = useMutation(UPDATE_USER, {\n    refetchQueries: [\n      {\n        query: QUERY_USER,\n      },\n    ],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formState);\n\n    try {\n      await update({\n        variables: { ...formState },\n      });\n      // window.location.replace(\"/tasks\");\n      // refetch();\n      alert(\"Successfully updated account\");\n    } catch (e) {\n      console.error(e);\n      alert(\"Error Updating Account\");\n    }\n  };\n\n  useEffect(() => {\n    if (data) {\n      setFormState({\n        username: data.user.username,\n        email: data.user.email,\n        password: \"\",\n      });\n\n      if (updateData) {\n        refetch();\n      }\n    }\n  }, [data, updateData]); //add update data\n  return (\n    <div className=\"account-form-div create-task-wrapper\">\n      {loading ? (\n        <div className=\"loading-div\">\n          <img\n            className=\"loading\"\n            src={\"./Pics/loading-gif.gif\"}\n            alt=\"loading...\"\n          />\n        </div>\n      ) : (\n        <>\n          {Auth.loggedIn() ? (\n            <form className=\"account-form create-form\">\n              <h4 className=\"acount-heading\">Account</h4>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Username\"\n                id=\"username-username\"\n                value={formState.username || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                id=\"username-email\"\n                value={formState.email || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                id=\"password-login\"\n                value={formState.password || \"\"}\n                onChange={handleChange}\n                required\n              />\n              <input type=\"submit\" onClick={handleFormSubmit} />\n              <p>\n                <span>\n                  Enter password only if you would like it to be updated.\n                </span>\n              </p>\n            </form>\n          ) : (\n            <p className=\"login-please\">\n              You need to be logged in to edit this Step. Please{\" \"}\n              <span>\n                &nbsp;\n                <Link to=\"/login\">login</Link> or&nbsp;\n                <Link to=\"/signup\">signup.</Link>\n              </span>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Account;\n","/Users/karenvillagomez/Weekly-Shedular/client/src/components/Footer/index.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/utils/utils.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/components/Task/index.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/EditStep.js",[],"/Users/karenvillagomez/Weekly-Shedular/client/src/pages/OneStep.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":7,"column":20,"nodeType":"103","messageId":"104","endLine":7,"endColumn":29},{"ruleId":"101","severity":1,"message":"105","line":13,"column":23,"nodeType":"103","messageId":"104","endLine":13,"endColumn":28},{"ruleId":"101","severity":1,"message":"106","line":13,"column":30,"nodeType":"103","messageId":"104","endLine":13,"endColumn":40},{"ruleId":"101","severity":1,"message":"107","line":4,"column":22,"nodeType":"103","messageId":"104","endLine":4,"endColumn":33},{"ruleId":"101","severity":1,"message":"108","line":16,"column":24,"nodeType":"103","messageId":"104","endLine":16,"endColumn":33},{"ruleId":"101","severity":1,"message":"109","line":30,"column":13,"nodeType":"103","messageId":"104","endLine":30,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":118,"column":32,"nodeType":"112","messageId":"113","endLine":118,"endColumn":34},{"ruleId":"101","severity":1,"message":"114","line":11,"column":27,"nodeType":"103","messageId":"104","endLine":11,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":47,"column":11,"nodeType":"117","endLine":47,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":182,"column":6,"nodeType":"120","endLine":182,"endColumn":17,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"119","line":63,"column":6,"nodeType":"120","endLine":63,"endColumn":24,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'DeleteData' is assigned a value but never used.","'QUERY_STEPS' is defined but never used.","'errorTask' is assigned a value but never used.","'taskData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [formState, refetch]",{"range":"131","text":"132"},"Update the dependencies array to be: [data, refetch, updateData]",{"range":"133","text":"134"},[4467,4478],"[formState, refetch]",[1374,1392],"[data, refetch, updateData]"]